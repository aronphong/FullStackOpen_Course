[{"/home/aron/fullstackopen/part3/phonebook/frontend/src/index.js":"1","/home/aron/fullstackopen/part3/phonebook/frontend/src/reportWebVitals.js":"2","/home/aron/fullstackopen/part3/phonebook/frontend/src/Components/PersonAdd.js":"3","/home/aron/fullstackopen/part3/phonebook/frontend/src/Components/Person.js":"4","/home/aron/fullstackopen/part3/phonebook/frontend/src/Components/PersonSearch.js":"5","/home/aron/fullstackopen/part3/phonebook/frontend/src/Components/Notification.js":"6","/home/aron/fullstackopen/part3/phonebook/frontend/src/Services/PersonService.js":"7","/home/aron/fullstackopen/part3/phonebook/frontend/src/App.js":"8"},{"size":500,"mtime":1611783197728,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611603237666,"results":"11","hashOfConfig":"10"},{"size":711,"mtime":1611676338064,"results":"12","hashOfConfig":"10"},{"size":281,"mtime":1611678988736,"results":"13","hashOfConfig":"10"},{"size":268,"mtime":1611609012107,"results":"14","hashOfConfig":"10"},{"size":214,"mtime":1611685741318,"results":"15","hashOfConfig":"10"},{"size":704,"mtime":1611679362128,"results":"16","hashOfConfig":"10"},{"size":3333,"mtime":1611783284196,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1tni2mm",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/home/aron/fullstackopen/part3/phonebook/frontend/src/index.js",[],["38","39"],"/home/aron/fullstackopen/part3/phonebook/frontend/src/reportWebVitals.js",[],"/home/aron/fullstackopen/part3/phonebook/frontend/src/Components/PersonAdd.js",[],"/home/aron/fullstackopen/part3/phonebook/frontend/src/Components/Person.js",[],"/home/aron/fullstackopen/part3/phonebook/frontend/src/Components/PersonSearch.js",[],"/home/aron/fullstackopen/part3/phonebook/frontend/src/Components/Notification.js",[],"/home/aron/fullstackopen/part3/phonebook/frontend/src/Services/PersonService.js",["40"],"import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst createPerson = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson);\n  return request.then((response) => response.data);\n};\n\nconst updatePerson = (id, newPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, newPerson);\n  return request.then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, createPerson, updatePerson, deletePerson };\n",["41","42"],"/home/aron/fullstackopen/part3/phonebook/frontend/src/App.js",["43"],"import React, { useState, useEffect } from \"react\";\nimport personService from \"./Services/PersonService\";\nimport Person from \"./Components/Person\";\nimport PersonSearch from \"./Components/PersonSearch\";\nimport PersonAdd from \"./Components/PersonAdd\";\nimport Notification from \"./Components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newPerson, setNewPerson] = useState({});\n  const [searchName, setSearchName] = useState(\"\");\n  const [message, setMessage] = useState({});\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const handleNameChange = (event) => {\n    setNewPerson({ ...newPerson, name: event.target.value });\n  };\n\n  const handleNumberChange = (event) => {\n    setNewPerson({ ...newPerson, number: event.target.value });\n  };\n\n  const handleNameSearch = (event) => {\n    setSearchName(event.target.value);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    persons.map((person) => {\n      if (person.name === newPerson.name) {\n        if (person.number !== newPerson.number) {\n          return personService\n            .updatePerson(person.id, newPerson)\n            .then((returnedPerson) => {\n              setPersons(\n                persons.map((person) => {\n                  return person.id !== returnedPerson.id\n                    ? person\n                    : returnedPerson;\n                })\n              );\n            });\n        }\n        return alert(`${newPerson.name} is already in the phonebook`);\n      }\n    });\n\n    persons.filter((person) => person.name === newPerson.name).length <= 0 &&\n      personService.createPerson(newPerson).then((returnedPerson) => {\n        setMessage({\n          text: `${returnedPerson.name} added`,\n          messageType: \"success\",\n        });\n        setNewPerson({ name: \"\", number: 0 });\n        return setPersons(persons.concat(returnedPerson));\n      });\n  };\n\n  const deletePersonHandler = (id) => {\n    const newPersons = persons.filter((person) => person.id !== id);\n    personService\n      .deletePerson(id)\n      .then(() => setPersons(newPersons))\n      .catch((error) => {\n        setMessage({\n          text: `Contact was already removed from server`,\n          messageType: \"error\",\n        });\n      });\n  };\n\n  const personsToShow =\n    searchName === \"\"\n      ? persons\n      : persons.filter((person) => {\n          return (\n            person.name.toLowerCase().indexOf(searchName.toLowerCase()) !== -1\n          );\n        });\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message.text} messageType={message.messageType} />\n      <PersonSearch\n        searchName={searchName}\n        handleNameSearch={handleNameSearch}\n      />\n      <PersonAdd\n        addPerson={addPerson}\n        newPerson={newPerson}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <ul>\n        {personsToShow.map((person) => {\n          return (\n            <Person\n              className='person'\n              key={person.name}\n              person={person}\n              deletePersonHandler={deletePersonHandler}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":24,"column":1,"nodeType":"50","endLine":24,"endColumn":69},{"ruleId":"44","replacedBy":"51"},{"ruleId":"46","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":35,"column":26,"nodeType":"55","messageId":"56","endLine":35,"endColumn":28},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["57"],["58"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]